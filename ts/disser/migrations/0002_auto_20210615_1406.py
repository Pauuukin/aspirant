# Generated by Django 3.2.4 on 2021-06-15 14:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('disser', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompositeMixture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Имя композицинонной смеси')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=256, verbose_name='Наименование сырья')),
                ('commodities', models.CharField(default='', max_length=256, verbose_name='Аббревиатура')),
                ('raw_material_brand', models.CharField(default='', max_length=256, verbose_name='Вид сырья')),
                ('type', models.CharField(choices=[('Термопласт', 'Термопласт'), ('Реактопласт', 'Реактопласт')], default='Термопласт', max_length=256, null=True, verbose_name='Тип')),
                ('price', models.CharField(default='', max_length=256, null=True, verbose_name='Цена за килограмм')),
                ('polar', models.CharField(default='', max_length=256, null=True, verbose_name='Полярность')),
                ('mass_mat', models.FloatField(default='', max_length=256, null=True, verbose_name='Малярная масса полимера')),
                ('mass_mat_monomer', models.FloatField(default='', null=True, verbose_name='Малярная масса мономера')),
                ('rec_moisture', models.FloatField(default='', null=True, verbose_name='Рекомендуемая влажность после сушки (Градусы С)')),
                ('PTR', models.FloatField(default='', null=True, verbose_name='Показатель текучести расплава(г/10 мин')),
                ('density', models.FloatField(default='', null=True, verbose_name='Насыпная плотность(кг/м^2')),
            ],
            options={
                'verbose_name': 'Сырье',
                'verbose_name_plural': 'Сырье',
            },
        ),
        migrations.CreateModel(
            name='OperationEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operating_mode', models.CharField(max_length=256, verbose_name='Режим работы')),
                ('note', models.CharField(max_length=256, verbose_name='Примечание')),
            ],
            options={
                'verbose_name': 'Оборудование операции',
                'verbose_name_plural': 'Оборудование операции',
            },
        ),
        migrations.CreateModel(
            name='StageTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_tp', models.CharField(max_length=256, verbose_name='Наименование стадии')),
                ('note', models.CharField(max_length=256, verbose_name='Примечание')),
            ],
            options={
                'verbose_name': 'Стадия Технологического процесса',
                'verbose_name_plural': 'Стадии Технологического процесса',
            },
        ),
        migrations.CreateModel(
            name='TechnicalNozzle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Наименование оснастки')),
                ('nozzle_tipe', models.CharField(choices=[('tipe1', 'Тип 1'), ('tipe2', 'Тип 2'), ('tipe3', 'Тип 3'), ('tipe4', 'Тип 4'), ('tipe5', 'Тип 5'), ('tipe6', 'Тип 6'), ('tipe7', 'Тип 7')], max_length=40, verbose_name='Тип оснастки')),
                ('count_entity', models.CharField(max_length=256, verbose_name='Гнездность')),
            ],
            options={
                'verbose_name': 'Техническая оснастка ',
                'verbose_name_plural': 'Техническая оснастка',
            },
        ),
        migrations.AlterModelOptions(
            name='equipment',
            options={'verbose_name': 'Оборудование', 'verbose_name_plural': 'Оборудованиe'},
        ),
        migrations.AlterModelOptions(
            name='manufacturer',
            options={'verbose_name': 'Производитель', 'verbose_name_plural': 'Производители'},
        ),
        migrations.AlterField(
            model_name='equipment',
            name='genus',
            field=models.CharField(choices=[('tipe1', 'Машина для литья под давлением'), ('tipe2', 'Дробилка'), ('tipe3', 'Сушилка')], max_length=256, verbose_name='Тип\\Вид оборудования'),
        ),
        migrations.CreateModel(
            name='TechnologicalMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('number', models.CharField(max_length=256, verbose_name='Номер карты')),
                ('note', models.CharField(max_length=256, verbose_name='Примечание')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='map', to='disser.material', verbose_name='Изделие')),
            ],
            options={
                'verbose_name': 'Технологическая карта',
                'verbose_name_plural': 'Технологические карты',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(choices=[('color1', 'Не имеет значения'), ('color2', 'Цвет 2'), ('color3', 'Цвет 3'), ('color4', 'Цвет 4'), ('color5', 'Цвет 5'), ('color6', 'Цвет 6'), ('color7', 'Цвет 7')], max_length=256, verbose_name='Материал')),
                ('product_tipe', models.CharField(choices=[('1', 'Таз'), ('2', 'Ведро'), ('3', 'Техническая тара'), ('4', 'Декор-ый технический поднос'), ('5', 'Мусорное ведро'), ('6', 'Щелевой колпачок'), ('7', 'Декор-ый цветной горшок')], max_length=256, verbose_name='Вид изделия')),
                ('name', models.CharField(max_length=256, verbose_name='Наименование изделия')),
                ('nomenclature', models.CharField(max_length=256, verbose_name='Номенклатурный номер изделия')),
                ('form', models.CharField(max_length=256, verbose_name='Тип формы')),
                ('weight', models.CharField(max_length=256, verbose_name='Вес отливки (граммы)')),
                ('net_weight', models.CharField(max_length=256, verbose_name='Чистый вес (граммы)')),
                ('consumption_rate', models.CharField(max_length=256, verbose_name='Норма расхода (граммы)')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='disser.material', verbose_name='Композитная смесь')),
            ],
            options={
                'verbose_name': 'Изделие',
                'verbose_name_plural': 'Изделия',
            },
        ),
        migrations.CreateModel(
            name='PositionTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('normative_value', models.CharField(max_length=256, verbose_name='Нормативное значение')),
                ('note', models.CharField(max_length=256, verbose_name='Примечание')),
                ('stage_tp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position', to='disser.stagetp', verbose_name='Стадия Технологического Процесса')),
                ('tm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position', to='disser.technologicalmap', verbose_name='Технологическая карта')),
            ],
            options={
                'verbose_name': 'Позиция Технологической карты',
                'verbose_name_plural': 'Позиция Технологической карты',
            },
        ),
        migrations.CreateModel(
            name='Operations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Наименование операции')),
                ('mode', models.CharField(max_length=256, verbose_name='Режим')),
                ('property', models.CharField(max_length=256, verbose_name='Характеристика')),
                ('parameter_name', models.CharField(max_length=256, verbose_name='Наименование параметра')),
                ('measure_unit', models.CharField(max_length=256, verbose_name='Единицы измерения')),
                ('operation_equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment_operation', to='disser.operationequipment', verbose_name='Оборудование для операции')),
                ('stage_tp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='disser.stagetp', verbose_name='Стадия ТП')),
            ],
            options={
                'verbose_name': 'Операция',
                'verbose_name_plural': 'Операции',
            },
        ),
        migrations.AddField(
            model_name='operationequipment',
            name='equipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment_operation', to='disser.equipment', verbose_name='Оборудование'),
        ),
        migrations.AddField(
            model_name='operationequipment',
            name='technical_nozzle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nozzle_operation', to='disser.technicalnozzle', verbose_name='Техническая оснастка'),
        ),
        migrations.CreateModel(
            name='MaterialMix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(max_length=101, verbose_name='Количество материала в смеси, в %')),
                ('compositeMixture', models.ManyToManyField(to='disser.CompositeMixture', verbose_name='Композитный материал')),
                ('material', models.ManyToManyField(to='disser.Material', verbose_name='Материал')),
            ],
        ),
    ]
